diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0ae1c919..1836d24d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -75,6 +75,15 @@ endif()
 
 include(GNUInstallDirs)
 
+if(MSVC)
+  set(CMAKE_MSVC_RUNTIME_LIBRARY_DEFAULT "MultiThreaded$<$<CONFIG:Debug>:Debug>")
+  set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_CRT_SECURE_NO_WARNINGS=1 -utf-8 -W3 -DUNICODE=1 -D_UNICODE=1 -wd26812")
+  set(CMAKE_CXX_FLAGS
+      "${CMAKE_CXX_FLAGS} -D_CRT_SECURE_NO_WARNINGS=1 -utf-8 -W3 -permissive- -Zc:__cplusplus -DUNICODE=1 -D_UNICODE=1 -wd26812"
+  )
+  set(CMAKE_RC_FLAGS "${CMAKE_RC_FLAGS} -c65001")
+endif(MSVC)
+
 include(CMakeOptions.txt)
 
 # Do not disable assertions based on CMAKE_BUILD_TYPE.
@@ -114,6 +123,9 @@ if(ENABLE_OPENSSL AND OPENSSL_FOUND)
   cmake_push_check_state()
   set(CMAKE_REQUIRED_INCLUDES   "${OPENSSL_INCLUDE_DIR}")
   set(CMAKE_REQUIRED_LIBRARIES  "${OPENSSL_LIBRARIES}")
+  if(WIN32)
+    set(CMAKE_REQUIRED_LIBRARIES "${CMAKE_REQUIRED_LIBRARIES}" "ws2_32" "bcrypt")
+  endif()
   check_symbol_exists(SSL_is_quic "openssl/ssl.h" HAVE_SSL_IS_QUIC)
   if(NOT HAVE_SSL_IS_QUIC)
     message(WARNING "Disabling OpenSSL due to lack of QUIC support in ${OPENSSL_LIBRARIES}")
diff --git a/lib/ngtcp2_net.h b/lib/ngtcp2_net.h
index f8d8e518..b1f28096 100644
--- a/lib/ngtcp2_net.h
+++ b/lib/ngtcp2_net.h
@@ -101,7 +101,7 @@ STIN uint32_t ngtcp2_htonl(uint32_t hostlong) {
 STIN uint16_t ngtcp2_htons(uint16_t hostshort) {
   uint16_t res;
   unsigned char *p = (unsigned char *)&res;
-  *p++ = (unsigned char)hostshort >> 8;
+  *p++ = (unsigned char)(hostshort >> 8);
   *p = hostshort & 0xffu;
   return res;
 }
diff --git a/lib/ngtcp2_ringbuf.c b/lib/ngtcp2_ringbuf.c
index a6b3f73e..f1c6de8a 100644
--- a/lib/ngtcp2_ringbuf.c
+++ b/lib/ngtcp2_ringbuf.c
@@ -32,7 +32,7 @@
 #include "ngtcp2_macro.h"
 
 #if defined(_MSC_VER) && defined(_M_ARM64)
-unsigned int __popcnt(unsigned int x) {
+static __forceinline unsigned int __popcnt(unsigned int x) {
   unsigned int c = 0;
   for (; x; ++c) {
     x &= x - 1;
